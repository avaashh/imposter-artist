{"ast":null,"code":"var _jsxFileName = \"/Users/avaashbhattarai/Desktop/aparadhi/frontend/src/components/app/GameCanvas.tsx\";\nimport * as React from \"react\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  border: \"0.0625rem solid #9c9c9c\",\n  borderRadius: \"0.25rem\"\n};\nconst GameCanvas = class GameCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = void 0;\n    this.canvas = /*#__PURE__*/React.createRef();\n    this.state = {\n      canvasEnabled: true // Enable the canvas initially\n    };\n  }\n\n  render() {\n    const {\n      canvasEnabled\n    } = this.state;\n    const allowOnlyPointerType = canvasEnabled ? \"all\" : \"none\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactSketchCanvas, {\n        ref: this.canvas,\n        strokeWidth: 5,\n        style: styles,\n        strokeColor: \"black\",\n        onStroke: console.log,\n        allowOnlyPointerType: allowOnlyPointerType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (this.canvas.current !== null) this.canvas.current.exportSvg().then(data => {\n            console.log(data);\n          }).catch(e => {\n            console.log(e);\n          });\n        },\n        children: \"Get Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.setState({\n            canvasEnabled: !canvasEnabled\n          });\n        },\n        children: \"Toggle Drawing Ability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n};\nexport default GameCanvas;","map":{"version":3,"names":["React","ReactSketchCanvas","jsxDEV","_jsxDEV","styles","border","borderRadius","GameCanvas","Component","constructor","props","canvas","createRef","state","canvasEnabled","render","allowOnlyPointerType","children","ref","strokeWidth","style","strokeColor","onStroke","console","log","fileName","_jsxFileName","lineNumber","columnNumber","onClick","current","exportSvg","then","data","catch","e","setState"],"sources":["/Users/avaashbhattarai/Desktop/aparadhi/frontend/src/components/app/GameCanvas.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { ReactSketchCanvas, ReactSketchCanvasRef } from \"react-sketch-canvas\";\n\nconst styles = {\n  border: \"0.0625rem solid #9c9c9c\",\n  borderRadius: \"0.25rem\",\n};\n\ninterface GameCanvasProps {\n  // GameCanvasProps (component props) defined here\n}\n\ninterface GameCanvasState {\n  // GameCanvasState (component states) defined here\n  canvasEnabled: boolean;\n}\n\nconst GameCanvas = class extends React.Component<\n  GameCanvasProps,\n  GameCanvasState\n> {\n  private canvas: React.RefObject<ReactSketchCanvasRef>;\n\n  constructor(props: GameCanvasProps) {\n    super(props);\n    this.canvas = React.createRef<ReactSketchCanvasRef>();\n    this.state = {\n      canvasEnabled: true, // Enable the canvas initially\n    };\n  }\n\n  render() {\n    const { canvasEnabled } = this.state;\n    const allowOnlyPointerType = canvasEnabled ? \"all\" : \"none\";\n\n    return (\n      <div>\n        <ReactSketchCanvas\n          ref={this.canvas}\n          strokeWidth={5}\n          style={styles}\n          strokeColor=\"black\"\n          onStroke={console.log}\n          allowOnlyPointerType={allowOnlyPointerType}\n        />\n        <button\n          onClick={() => {\n            if (this.canvas.current !== null)\n              this.canvas.current\n                .exportSvg()\n                .then((data) => {\n                  console.log(data);\n                })\n                .catch((e) => {\n                  console.log(e);\n                });\n          }}\n        >\n          Get Image\n        </button>\n        <button\n          onClick={() => {\n            this.setState({ canvasEnabled: !canvasEnabled });\n          }}\n        >\n          Toggle Drawing Ability\n        </button>\n      </div>\n    );\n  }\n};\n\nexport default GameCanvas;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,iBAAiB,QAA8B,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,MAAM,GAAG;EACbC,MAAM,EAAE,yBAAyB;EACjCC,YAAY,EAAE;AAChB,CAAC;AAWD,MAAMC,UAAU,GAAG,MAAbA,UAAU,SAAiBP,KAAK,CAACQ,SAAS,CAG9C;EAGAC,WAAWA,CAACC,KAAsB,EAAE;IAClC,KAAK,CAACA,KAAK,CAAC;IAAC,KAHPC,MAAM;IAIZ,IAAI,CAACA,MAAM,gBAAGX,KAAK,CAACY,SAAS,CAAuB,CAAC;IACrD,IAAI,CAACC,KAAK,GAAG;MACXC,aAAa,EAAE,IAAI,CAAE;IACvB,CAAC;EACH;;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAED;IAAc,CAAC,GAAG,IAAI,CAACD,KAAK;IACpC,MAAMG,oBAAoB,GAAGF,aAAa,GAAG,KAAK,GAAG,MAAM;IAE3D,oBACEX,OAAA;MAAAc,QAAA,gBACEd,OAAA,CAACF,iBAAiB;QAChBiB,GAAG,EAAE,IAAI,CAACP,MAAO;QACjBQ,WAAW,EAAE,CAAE;QACfC,KAAK,EAAEhB,MAAO;QACdiB,WAAW,EAAC,OAAO;QACnBC,QAAQ,EAAEC,OAAO,CAACC,GAAI;QACtBR,oBAAoB,EAAEA;MAAqB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFzB,OAAA;QACE0B,OAAO,EAAEA,CAAA,KAAM;UACb,IAAI,IAAI,CAAClB,MAAM,CAACmB,OAAO,KAAK,IAAI,EAC9B,IAAI,CAACnB,MAAM,CAACmB,OAAO,CAChBC,SAAS,CAAC,CAAC,CACXC,IAAI,CAAEC,IAAI,IAAK;YACdV,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC;UACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;YACZZ,OAAO,CAACC,GAAG,CAACW,CAAC,CAAC;UAChB,CAAC,CAAC;QACR,CAAE;QAAAlB,QAAA,EACH;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzB,OAAA;QACE0B,OAAO,EAAEA,CAAA,KAAM;UACb,IAAI,CAACO,QAAQ,CAAC;YAAEtB,aAAa,EAAE,CAACA;UAAc,CAAC,CAAC;QAClD,CAAE;QAAAG,QAAA,EACH;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;AACF,CAAC;AAED,eAAerB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}